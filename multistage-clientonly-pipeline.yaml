
variables:
  buildConfig: 'Release'
  releaseBranchName: 'Release'

schedules:
- cron: '0 15,30,45 * ? * *'
  displayName: 'Deploy every day at 3a'
  branches:
    include:
    - release
  always: false

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs:
  - job: 'Build'
    displayName: 'Build Job'
    pool: 
      vmImage: windows-latest

    steps:
    - task: VisualStudioTestPlatformInstaller@1
      inputs:
        packageFeedSelector: 'nugetOrg'
        versionSelector: 'latestPreRelease'

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'
        feedsToUse: 'select'
        vstsFeed: '8071c395-9670-4b42-8a62-f5ed29e3344c/605c304d-ce8c-489e-bc3c-58dcff36f281'
  
    - template: templates/build.yml
      parameters:
        buildConfig: 'Debug'

    - template: templates/build.yml
      parameters:
        buildConfig: 'Release'

    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*test*.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
      displayName: 'run tests on output builds'
        
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop2'
        publishLocation: 'Container'

- stage: 'Dev'
  displayName: 'Deploy to dev environment'
  dependsOn: 'Build'
  condition: |
    and 
    (
      succeeded(), 
      eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
    )
  jobs:
  - deployment: Deploy
    pool: 
      vmImage: 'windows-latest'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop2
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'deployment_connection_to_temp_azure_rg'
              WebAppName: '$(WebAppNameDev)'
              Package: '$(Pipeline.Workspace)/drop2//*-nodrama-Release.zip'



- stage: 'Test'
  displayName: 'Deploy to test environment'
  dependsOn: 'Dev'
  condition: eq(variables['Build.Reason'], 'Schedule')
  jobs:
  - deployment: Deploy
    pool: 
      vmImage: 'windows-latest'
    environment: test
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop2
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'deployment_connection_to_temp_azure_rg'
              WebAppName: '$(WebAppNameTest)'
              Package: '$(Pipeline.Workspace)/drop2//*-nodrama-Release.zip'
  
